{"version":3,"sources":["config/firebaseConfig.js","firebase.js","components/dashboard/Navbar.js","config/firebaseUi.js","components/landing/oauth.js","actions/authActions.js","components/landing/landing.js","components/dashboard/index.js","App.js","serviceWorker.js","reducers/userReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firebase","Navbar","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","PhoneAuthProvider","Oauth","firebaseAuth","authSuccess","payload","type","Landing","useState","modalVisible","setModalVisible","dispatch","useDispatch","useEffect","onAuthStateChanged","user","notification","info","message","description","onClick","destroy","placement","id","left","DollarCircleTwoTone","right","shape","bottom","gutter","span","title","hoverable","value","precision","prefix","centered","visible","onOk","onCancel","Dashboard","useSelector","state","isAuth","to","signOut","App","className","path","exact","Boolean","window","location","hostname","match","initialState","error","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9346f206.chunk.js","sourcesContent":[" const firebaseConfig =  {\r\n    apiKey: \"AIzaSyAuOf94KCcW2oTI3gUitSD35tWsPggP0Z0\",\r\n    authDomain: \"openquiz-29cc5.firebaseapp.com\",\r\n    databaseURL: \"https://openquiz-29cc5.firebaseio.com\",\r\n    projectId: \"openquiz-29cc5\",\r\n    storageBucket: \"openquiz-29cc5.appspot.com\",\r\n    messagingSenderId: \"164997608299\",\r\n    appId: \"1:164997608299:web:356365bf263b879e7a122e\",\r\n    measurementId: \"G-BVJGHYMEWD\"\r\n  }\r\n\r\n\r\n  export default firebaseConfig;","import * as firebase from 'firebase';\r\nimport firebaseConfig from './config/firebaseConfig'\r\n\r\n\r\nvar app = firebase.initializeApp(firebaseConfig);\r\n\r\n\r\nfirebase.analytics();\r\n\r\n\r\n export default app;","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <div>\r\n      custom nav\r\n    </div>\r\n  )\r\n}\r\n","import firebase from 'firebase'\r\n\r\n\r\nconst uiConfig = {\r\n    // Popup signin flow rather than redirect flow.\r\n    signInFlow: 'popup',\r\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n    signInSuccessUrl: '/dashboard',\r\n    // We will display Google and Facebook as auth providers.\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      firebase.auth.PhoneAuthProvider.PROVIDER_ID\r\n    ]\r\n  };\r\n\r\n\r\n\r\n  export default uiConfig;","import React from 'react'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from '../../firebase'\r\nimport uiConfig from '../../config/firebaseUi'\r\nexport default function Oauth() {\r\n    return (\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>\r\n    )\r\n}\r\n","export function authSuccess(payload){\r\n    return{\r\n        type:\"AUTH_SUCCESS\",\r\n        payload\r\n    }\r\n}\r\n\r\nexport function authFailed(){\r\n    return{\r\n        type:\"AUTH_FAILED\",\r\n    }\r\n}","import React,{useState,useEffect} from 'react'\r\nimport './landing.css'\r\nimport { \r\n    Button ,\r\n    Divider ,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Modal,\r\n    notification ,\r\n    Statistic\r\n} from 'antd';\r\nimport OAuth from './oauth'\r\nimport {DollarCircleTwoTone} from '@ant-design/icons'\r\nimport {Fade} from 'react-reveal'\r\nimport {useDispatch} from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport {authSuccess,authFailed} from '../../actions/authActions'\r\n\r\n function Landing() {\r\n    const [modalVisible,setModalVisible] = useState(false);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              dispatch(authSuccess(user))\r\n            } else {\r\n            dispatch(authFailed())\r\n            notification.info({\r\n                message: 'Welcome Buddy',\r\n                description:\r\n                  'Click here to login and start earning money',\r\n                  \r\n                onClick: () => {\r\n                  setModalVisible(true)\r\n                  notification.destroy()\r\n                },\r\n                placement:\"bottomRight\"\r\n              });\r\n            }\r\n          });\r\n        },[]);\r\n\r\n\r\n    return (\r\n        <div id=\"container\">\r\n        <Fade>\r\n            <nav id=\"top-nav\">\r\n                 <span id=\"logo\">OPEN QUIZ</span> \r\n                 \r\n            </nav>\r\n        </Fade>\r\n            <Divider/>\r\n            <div id=\"middle\">\r\n                <Fade left>\r\n                  \r\n                    <span id=\"logo-middle\">\r\n                    <DollarCircleTwoTone />\r\n                    OPEN QUIZ</span>\r\n                </Fade>\r\n           \r\n                <Fade right>\r\n                    <div id=\"middle-btn-grp\">\r\n                        <h1>Wanna Earn Money ?</h1>\r\n                        <p>Have you ever thought earning money would be so easy ?<br/>\r\n                            Earn by just winning various QUIZ matches\r\n                        </p>\r\n                        <Button type=\"primary\" shape=\"round\" onClick={()=>setModalVisible(true)}>GET STARTED</Button>\r\n                    \r\n                    </div>\r\n            </Fade>\r\n            \r\n            </div>\r\n\r\n            <Divider/>\r\n            <Fade bottom>\r\n            <div id=\"card-grp\">\r\n                <Row gutter={16}>\r\n                <Col span={8}>\r\n                    <Card title=\"Earn Real Money\" hoverable>\r\n                    Earn points by playing quiz matches\r\n                    and redeem that points as real money .\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Card title=\"Increase General Knowledge\" hoverable>\r\n                        Playing quiz will help you to increase your\r\n                         General knowledge as well.\r\n                    </Card>\r\n                </Col>\r\n                <Col span={8} >\r\n                    <Card title=\"1000+ Quiz Question\" hoverable>\r\n                        We have 1000 + trivia based MCQ's and \r\n                        True/False questions.\r\n                    </Card>\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n            </Fade>\r\n           <Divider/>\r\n           <div id=\"stats\">\r\n               \r\n                    <Statistic title=\"Active Users\" value={11289} />\r\n                    <Statistic title=\"Amount Paid to Users\" value={12598.54} precision={2} prefix=\"$\"/>\r\n                    \r\n                \r\n            </div>\r\n           <Divider/>\r\n           <div id=\"footer\">\r\n            <span>Copyright by @Codified Coder</span>\r\n           \r\n           </div>\r\n\r\n           <Modal\r\n           title=\"Login using...\"\r\n           centered\r\n           visible={modalVisible}\r\n           onOk={() => setModalVisible(false)}\r\n           onCancel={() => setModalVisible(false)}\r\n         >\r\n           <OAuth/>\r\n         </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Landing;","import React,{useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport firebase from '../../firebase'\r\nimport {\r\n    Button\r\n} from 'antd'\r\nimport {authSuccess,authFailed} from '../../actions/authActions'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport default function Dashboard() {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector(state=>state.auth)\r\n    useEffect(()=>{\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n              dispatch(authSuccess(user))\r\n            } else {\r\n            \r\n            dispatch(authFailed())\r\n            \r\n            }\r\n          });\r\n        },[]);\r\n    return (\r\n        <div>\r\n        {auth.isAuth ? null:<Redirect to=\"/\"/>}\r\n            <h1>DASHBOARD</h1>\r\n            <Button onClick={()=>firebase.auth().signOut()}>LOGOUT</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport firebase from './firebase'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n } from \"react-router-dom\";\n import {useSelector,useDispatch} from 'react-redux'\n import Navbar from './components/dashboard/Navbar'\n import Landing from './components/landing/landing'\nimport Dashboard from './components/dashboard'\n\n\n\nfunction App() {\n  const auth = useSelector(state=>state.auth)\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        {auth.isAuth ?  <span>\n          <Navbar/>\n          <Redirect to=\"/dashboard\"/>\n          </span>:null}\n       \n        <Switch>\n          <Route path=\"/\" exact>\n            <Landing/>\n          </Route>\n         \n          <Route path=\"/dashboard\">\n            <Dashboard/>\n          </Route>\n          \n        </Switch>\n        </Router>\n      \n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\nconst initialState = {\r\n    user:null\r\n}\r\n\r\n\r\n\r\n\r\nexport default function userReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n        return {\r\n            user:action.payload\r\n        }\r\n        case \"RESET_USER\":\r\n            return {\r\n                user:null\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\n\r\nconst initialState = {\r\n    isAuth:false,\r\n    user:null,\r\n    error:false\r\n}\r\n\r\n\r\n\r\n\r\nexport default function authReducer(state=initialState,action){\r\n    switch(action.type){\r\n        case \"AUTH_SUCCESS\":\r\n        return {\r\n            user:action.payload,\r\n            isAuth:true,\r\n            error:false\r\n        }\r\n        case \"AUTH_FAILED\":\r\n            return {\r\n                user:null,\r\n                isAuth:false,\r\n                error:true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}","\r\nimport {combineReducers} from 'redux'\r\nimport userReducer from './userReducer'\r\nimport authReducer from './authReducer'\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    user:userReducer\r\n})\r\n\r\n\r\nexport default rootReducer;","import {createStore} from 'redux'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n   \r\n  ));\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './store/store'\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}